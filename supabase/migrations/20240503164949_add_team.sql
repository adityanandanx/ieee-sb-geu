create type "public"."TeamType" as enum ('core', 'tech');

create table "public"."team" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "fullname" text not null,
    "position" text not null default 'volunteer'::text,
    "teamtype" "TeamType" not null,
    "avatar" text
);


alter table "public"."team" enable row level security;

CREATE UNIQUE INDEX team_pkey ON public.team USING btree (id);

alter table "public"."team" add constraint "team_pkey" PRIMARY KEY using index "team_pkey";

grant delete on table "public"."team" to "anon";

grant insert on table "public"."team" to "anon";

grant references on table "public"."team" to "anon";

grant select on table "public"."team" to "anon";

grant trigger on table "public"."team" to "anon";

grant truncate on table "public"."team" to "anon";

grant update on table "public"."team" to "anon";

grant delete on table "public"."team" to "authenticated";

grant insert on table "public"."team" to "authenticated";

grant references on table "public"."team" to "authenticated";

grant select on table "public"."team" to "authenticated";

grant trigger on table "public"."team" to "authenticated";

grant truncate on table "public"."team" to "authenticated";

grant update on table "public"."team" to "authenticated";

grant delete on table "public"."team" to "service_role";

grant insert on table "public"."team" to "service_role";

grant references on table "public"."team" to "service_role";

grant select on table "public"."team" to "service_role";

grant trigger on table "public"."team" to "service_role";

grant truncate on table "public"."team" to "service_role";

grant update on table "public"."team" to "service_role";

create policy "Enable read access for all users"
on "public"."team"
as permissive
for select
to anon, authenticated
using (true);



